;
; File generated by cc65 v 2.19 - Git f3663b8d2
;
	.fopt		compiler,"cc65 v 2.19 - Git f3663b8d2"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.export		_myfoo
	.export		_myfoo2
	.export		_bar
	.export		_main

.segment	"RODATA"

S0002:
	.byte	$4D,$59,$46,$4F,$4F,$32,$20,$2D,$20,$25,$44,$0D,$00
S0001:
	.byte	$4D,$59,$46,$4F,$4F,$20,$20,$2D,$20,$25,$44,$0D,$00

.segment	"BSS"

_bar:
	.res	8,$00

; ---------------------------------------------------------------
; void __near__ myfoo (unsigned char arg)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_myfoo: near

.segment	"CODE"

	jsr     pusha
	lda     #<(S0001)
	ldx     #>(S0001)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _printf
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ myfoo2 (unsigned char arg)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_myfoo2: near

.segment	"CODE"

	jsr     pusha
	clc
	lda     #$01
	adc     (sp)
	sta     (sp)
	lda     #<(S0002)
	ldx     #>(S0002)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _printf
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #>(_myfoo)
	sta     _bar+1
	lda     #<(_myfoo)
	sta     _bar
	lda     #>(_myfoo2)
	sta     _bar+4+1
	lda     #<(_myfoo2)
	sta     _bar+4
	lda     _bar
	ldx     _bar+1
	jsr     pushax
	lda     #$0C
	pha
	lda     (sp)
	sta     jmpvec+1
	ldy     #$01
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
	lda     _bar+4
	ldx     _bar+4+1
	jsr     pushax
	lda     #$0C
	pha
	lda     (sp)
	sta     jmpvec+1
	ldy     #$01
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
L0005:	bra     L0005

.endproc

