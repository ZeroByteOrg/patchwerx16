;
; File generated by cc65 v 2.19 - Git 3caceb81
;
	.fopt		compiler,"cc65 v 2.19 - Git 3caceb81"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.export		_answer
	.export		_question
	.export		_foo
	.export		_main

.segment	"RODATA"

S0001:
	.byte	$54,$48,$45,$20,$41,$4E,$53,$57,$45,$52,$20,$49,$53,$20,$25,$44
	.byte	$0D,$00
S0002:
	.byte	$57,$48,$41,$54,$20,$49,$53,$20,$36,$20,$2A,$20,$25,$44,$3F,$0D
	.byte	$00
S0003:
	.byte	$48,$45,$4C,$4C,$4F,$20,$57,$4F,$52,$4C,$44,$2E,$00

.segment	"BSS"

_foo:
	.res	4,$00

; ---------------------------------------------------------------
; unsigned char __near__ answer (unsigned char f)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_answer: near

.segment	"CODE"

	jsr     pusha
	lda     #<(S0001)
	ldx     #>(S0001)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _printf
	ldx     #$00
	txa
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ question (unsigned char f)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_question: near

.segment	"CODE"

	jsr     pusha
	lda     #<(S0002)
	ldx     #>(S0002)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _printf
	ldx     #$00
	txa
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #>(S0003)
	sta     _foo+1
	lda     #<(S0003)
	sta     _foo
	lda     #<(_question)
	ldx     #>(_question)
	sta     _foo+2
	stx     _foo+2+1
	jsr     pushax
	lda     #$07
	pha
	lda     (sp)
	sta     jmpvec+1
	ldy     #$01
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
	lda     #<(_answer)
	ldx     #>(_answer)
	sta     _foo+2
	stx     _foo+2+1
	jsr     pushax
	lda     #$2A
	pha
	lda     (sp)
	sta     jmpvec+1
	ldy     #$01
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
L0005:	bra     L0005

.endproc

